
lparallel
=========

lparallel is a library for parallelism in Common Lisp.

See http://lparallel.com for documentation and examples.

Running
-------

lparallel should run on any Common Lisp implementation supported by
bordeaux-threads. The following implementations successfully pass the
test suite:

  * ABCL
  * Allegro
  * Clozure
  * LispWorks
  * SBCL

These are the only implementations which have been tested so far.

To run the tests, load lparallel-test.asd and call lparallel-test:execute.

Overview
--------

lparallel provides low-level and high-level tools for writing
efficient parallel programs in Common Lisp.

The low-level API of lparallel is an abstraction of a parallel
machine. The current implementation of the API uses a group of worker
threads. In principle other implementations are possible (for instance
an interface to a distributed system).

lparallel also provides higher-level facilities including:

* asynchronous condition handling across thread boundaries

* parallel versions of map, reduce, sort, remove, and many others

* promises, futures, and delayed evaluation constructs

* computation trees for parallelizing interconnected tasks

* targeted task-killing by category

* vector-based FIFO queues

Author: James M. Lawrence <llmjjmll@gmail.com>
